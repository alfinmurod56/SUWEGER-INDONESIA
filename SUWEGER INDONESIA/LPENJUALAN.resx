<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAeAAAAEOCAYAAABRmsRnAAAABGdBTUEAALGPC/xhBQAAFQRJREFUeF7t
        3UuT68Z5BmD//3+UhSvlKNZobKeSrFIlKVVSJEtHJxdn4UUqWUzQIEFxOCCJS1/Rz+KpMwI5HApg99tf
        NwD+5qtfPr3RsE8z26jIL6d/P/389vLhMea8/PLz6efP5303x+d+m88z2yhGAOeQtLM4d1ZU4hQaycJ2
        CPLZ7a0b2sjifSZENns56uenUQK4caqqQoYQeJ2qW4Og7cLg9DZQHwTsr/uctey7+gjgHEyXHcCvnZdB
        z3YvU1tQxWZ3mdqnGgI4l0frWTtdOrV3NLa9Xme2sYFpz+JUv3USwDDjdRwwCY7Nwkln54GhgUx5qt86
        CeBMNICW/FLVySrNTHmHfZYidE1X72cZrEoCOJciHbrQXy1UvpV1VjUH8DhQ2bO/BEN6BjDVEsDAZqaX
        G2CQUy0BfABOsCCPSDMqKrJ87OuqCeDGhSnAh1WI0e8BFBxgVbQWzgbaf9UEcOuGBvba9ShX9R+b65wP
        QvVbPQFMEqET//Is/HwtbJv7nSgOOuJPfxa9SvdwVL/VE8CZhQCa277ZkinCjCPhMWSH93QJ3+Hny7br
        7Vf/zr0OM2LezOXqc+NEqgNS/TZBALfuqiMtaQrUUQjds7/76c9vv//5p9GXZ+PP4fHz730I4bHziBA2
        R6gAwhLDu//efrxdi94R1W8TBHB2sTvBJa+XruOdgnf8dwiHELAheH/35x/ffjv45//6j3H7F4PfX5me
        ewnr82vM/Y1dVnZESd7DCu/+/r2Kd0vnqiLqh2PdDAHMZlPFO04vT9Xt8PNvf/zh7V/++y9v//N///v2
        4xDA4fEvfv7z4Ke3vw8+TRXwMDDIMVKvvUMa9sXs9nsu/z/3fi/dgIsGqH6bIYAzC2E0t32zFI1t6uDD
        a9++/rTtvD3c73esYId/v/jpp7ffDb7/61/ffhwC+G+/+frtb77++u2rH34YAvf03Hevlcvavxv7GN0a
        Xz/S35iOlaqHwOegKQK4hKiNxGU4KcSciv4w6Er4zVh0rtQgl00EcC96Hxln/P8vvY5Mp1S/zRHAvdA4
        Vzt9JWEI1Pnp4rmgdUkPJbgdbZsEcOtMZ2ZiP1Mvl5i1SQAXEGuKMvoJXUdmBiCuLWuN1ieTUP22SwAX
        EC2AY4x6BRM0TfXbLgHcqPHSnzUN7171oSrpyqlauqqYlg7AwvO2fFb+fWYb0ah+2yaAG7V2+vn+iURG
        z4e3JGQjz4SMwWBwl5z22zYB3KhYAXz4uyaZYl8uQmCqyPKxr9sngAvZuw5c7K5SjXCC2mDPZ2TDlLNA
        yEv12z4BzDJDh3yZVpwM28O28XpZlWYdNgQn7THYOQYBzGNbOvTh+VMHEcJZZ9GgtQMqA7CsVL/HIICb
        lKfxJQvOqYK+MVbTZ+F5z/7+OM2s4z8J+3Bu+1ZrXy/23+euZO2S7ARwk9IHcG2NPLyf8dKrgQ7oLOV0
        s0Ctlur3OARwY1Le6H9q2FUG3BAIgvdM1d8vx/5QBHAxmcNkacMNlU/NjfzmvTnbmZ74vB+LAC4kZSX7
        0Bhg5/APYTu5fV6tbithFQG98Fk/HAFcSLEAfqaFRt7SgOGwhkGQaiwr1e/xCOBCsgfw0tBqZZStGkjs
        prMf9/dp5uHVACg75z8ckwAuZHUA7+j0Vp01KYAJHu1fAZyffX5IAriQrBXwisZrpF2Jkh3ug7/tEpj8
        tMnjEsANsPZDcgsCXxAUovo9LAHcg5XTtQL/6NYH6Ri+giA7Mw7HJoALqPYM6EkL66vWgBf59V7cOwNU
        +ObnM354ArhyrzPbstDhVi8E6xiw55C9VKnTsYvVgQsCSEIAc1e1U9FHHhycw24K18vP1+G65P8/0j66
        /N2Zx0jIoKcLArhWscJvZ0O2BpVROFZbwy5Vhy18y7DfuyCAa1VTAxw691AJOTkroT0BmuizMla/M9tJ
        y6C3HwK4QjUH3dgpD2EROonwPoVyAamq3VuqsPxyHVuqIIALeF5ZNBpqU6Uc3v/YeYd/BXRUuUJREEBy
        Arg2oYM9n3yzR7WVaejY58w973bbEVVYZZp6LqSXzzwXArgyaTq/TGGsA4moXAhagyzElH93BHBmj27C
        0c566vl9Ctxdagw61W8ZBj19EsDZ3W9o8e6QdedvjIG5rKGPJ1ldP1fYxnepeOoJPUFQgLbVLQFci1D9
        Rlj7XSU0/Gtzz6Ebql/ISwBXQ+fXh3qPswAuwMC3awK4Ai+RznweadD1aeWYOAkoP/u8awI4o3trvLEq
        D+t3tRmOaysdrIFbdtorAriwqI1QJ1peq8dAJZaXtspAAGdzJ2gjNUSj6dIaqnZvCYPs3MKVQABnMjv9
        HLERvvtO2JnHSeAgwWXwlpkBD2cCuKAsYamx84zpZyhCAOcwd41v7ikoQbzPtP8OFlZmTPKyv7kmgDOY
        P/u5QENU6ax38IGLtch8hC+3BHCPBPEy9hMRGexwSwDnkPsWkyu8hpARNH2yLJGPfc0MAZzY7Rmm8b5w
        IbIphDN1FGE6bt2UXMpBTKdTgwZeUJQATuw2gMPlQtf/vUmWjjNyKD07iSl3haAiEcCZWPvlHgHcmCLX
        bOYKqxAIW/7WTJBMFfaHzk/wjoRCHvYzjwjg1KaK99PPuxtj0ZM4ppDLEGDjuvTM9mfG2YVHv7vxdY/I
        CUGZ+MzxgADOJsJIuLbGnCCMtwxS7v6Oanee/ZKF6pdnBHBC49cMXv3LAmv31b0wsc/vUv1m4jPIEwI4
        qdMIOMqJV4M27tm7/f91dcUwF746vcdUv3nYzywggFMaGmHU6relRr2hylodwGHf6uhWUf2mZ+qZpQRw
        MpE6upuAaaEKztIBhf2i2l3HYCWLNmaqqIEATuTUCOM0xNsGXXsVs/X9Lfu9IdwF7yaq3wwMclhBACcS
        7ngV865X11Vl+LnWznRP9Xv3/0mntptpUaiPAE7gFCTrA/JpqN4EUZWdqrCskgDOwGeflQRwAimr0w8d
        6dDoD7nmZJo5LvszPfuYlQRwEuEWiHPb71l5l6yZkfb4+yGMC05N76+yht/XiUWn+k3PPmYLAVyJTQ34
        TliF1yoSxKbg6JDwZSsBHNvC4Hs3bXwOri0N+eHvhNdVUfbNoCg9bYyNBHB0CwM4BPW5cww/T0G6aTQ9
        vM7TinfJc3ZY976H5+q08rCfk9rUXuFMAGf28vkUtteh+8HGqmXRyVghiIfnRQ/jJe85PEcgZCMcMvB5
        ZgcBHNvnz/Pbz5Z2iuH+0VvObl7V6Sauii8EbxlLBkVsZoDDXgI4okc33njUWC9f1jATUlsa+fg7KwJv
        fP6OzvruexQAHNTaNgZzBHBED7944RxGoeE+Ctx7Nl3ruyUAh9+5G6j33P4dwVvc6mPIKpvaI9wQwBE9
        /NrBCKPl0KlumTLe3BmHIB3e97O/mWUam3VUZ+kYYBKJAI7k4X2fI3eGWwJ1a3hPwu9vDnI4EoMbIhHA
        OaQYMW98zb1BHFy/hlCukAotGZ93YhLArdva2Q6/tyuIw99VCdCRMXx95olIAEcS86sHN9kaqHuDmLps
        HZDxlBOviE0AH8g4NbyxkxhH9zrv5gmJNEw9k4IATq1AqO0J4skUyNPrjFWy6bf6OUbQDAGcUOmp3RhB
        TDtUaWloQ6QigCN4vVflVlKNjB2zyujwrOUnYFmGhARwT8KU8tZOWoBXTfUbn4ErqQngHq0NYlVA1YQv
        tEkAJ1L7ulEI4NBx67wbNAyIxtuehupMhZaEdkEOAniHMcQe3f+5QuE9T4ODd1NsoVMf/nvzFDVJtfY5
        a5oZHzIRwDs8/PrBocMcnavMh87Pm3udGMbQPVe807Znf296b9eBTUZCAA5PANfkXI0+C8exSh2eOz7v
        XLnOPe+etc8XBuldjolp5aIMNslJAO+RsqM8v/ZUgU5h++F5GawObJYJgydTy/Uw0CQzAbzRWIXObI8q
        QcCvGeGP4XB5DyqDGMJgxoCmPo4JJQjgFGKOpGOG8IL3dbcjUh3sl3LGhH0cGwoQwJvNV4QpKuPUo3Oj
        /7jC/nw/e0DVHCcKEcCxJWjMqULd+mM89iewlgDeoMh3/+6dAo48hZxlDbx2puWbZYaCGgjgVtTY2Y/v
        6XSN8ezjRyR0mzYutwheKiGAN6i9As4/HXrwABa67QvHUPBSGQG81tCIX+e2Bykb+JMQsAYZ11gpzWyn
        PY4ltRLAMSWslOY6EaEbl/15MGYuqJwArsgUAKOrwK16jfUonZzpSSAzARzJ2nvIXgI2dPxPOv+Xz8Nr
        1xp0jQbw9QCH43BcaYkAXuElVpW05nVCwNVcnbUUwNN7rXl/stkYvo4tDRHACb2rcm8eW8Jofr+wD8d1
        XR3zsTU6E0PfBHBklw5/5rHFFla9f/zm29ntnAndPghfGiWAV7h7+dEg1tmz7U2jVVSlDx1xe/sP6JUA
        XqjIzTeA+wy0aJwAXiz9pUBrz6TOT7VLJRx3DkAALzR29jPbfSlBZtb7EL4chADeLVIAVxcs9VS7lxPb
        dLzduzcQhhYJ4AVyVLkq6RmqXa75PHAwAnivjZ3Cpaqbfr9odVdZdamj5YbKlyMSwDusrVrvXqpUMvwq
        Ct5Yl3JxLMKXoxLAe4TwWmJ67u3vX8k2BV1ZdTnOBOhgucNngyMTwEtsrMyq6jxC8D4ZBGRV2/uhTj4j
        HJgATmVtwCSrTIdBgOClQapfjk4AbzY/Zby104ja2SQL8+2s77KG8KUHAviZFdXa2Gnsqe72Bmetwavi
        ZS2fGToggJ9Z2BHEGrFvOxmrrmoh7AsVDJtVOJCEFATwXpE7i8XBVWO1K3jZafz8qH7phADeKEytplrX
        fPilDDVWB+E96TSJoP4vJIF4BPBWCQPnXhX5+sO/DX+3og5K8BJTjYNLSEgA16rmzkjwkoD7odMbAVyx
        S4dUSxgLXhJx7gA9EsD3VDAa/3WNufB7EbwkpvqlRwL4jpfZwMnXSUwd0h+//ebDY9kIXnKoZYYHMhPA
        FQrhG6bkXoYK+J/+4R9nn5OU4CUjZz7TKwFcoWk97Mu//Ofbn7791w+PpxL+rrU4cvJ5o2cCeLH0o/Sp
        8s1dgQpeSvG5o2cCuBKlOiJfkkBRljromABeIOUZmpf1rw0d0Vi5nu/INblsvzK+9j03rwm5jJ/Nme3Q
        CwE86yZwIwfV0o5net5skN48F5rjc0znBHAmY4jOTPeeQvZqu06JXvis0zkB/MTm6efztY1TFXty/lnH
        Q+fetwvokwB+ZkFYXtZgQ6cSnn99YwFhCx9pFyCAF3nSWRjNA7CWAF7oErKqW9jFgBVOBPBD6W++Ab0R
        wHAigB9R4UJ07v0MJwL4ysvMNiCulDe2gWZ8FsAAkNf5XCIBfMXaFKSljdG1m2VNAXzNmi+kdX0VAXRk
        bvApgIFsnIBFby5fMzvzmAAGshHA9OJR8E4E8BzTZJCEM6A5uvEzvjBDBPANHQSko31xZGGGZ82JhgL4
        lhOxAFhoqni3nOEvgCemnQFYaM1U8z0C+JYgBmDGGLqf4l3PLoAH1qUAmBM7dK8J4CsukQDo21SQhcBN
        EbrXBDAAXQphOwrFV1h+zLwE2X0Av/sGJOu/AO0a+vAQpvdMIZu6sl1KBRwOyux2AFpRS6iuIYDPxtHR
        zHYAKtfo/RsEMADNCmu4LVa/QdcB/DKeWj7/GBDfdIYpxNJq+AZ9B/DMNiAdAUxMrS8dmoIe6RQgBwEM
        v+o3gHUEkJ8vOyGWA1w22m0Am36G/Fper6MiB7lngylo08+Qz0E6TohBAAPZqIDZo+VLjuYIYACacLQB
        XH8B7CQQKMqZ0GxxxLsVqoCBvAyCWemog7auAvjdQdQJQBHWgVnrqJ+Zvirg69B1NiZA/Q7cV/cTwNfh
        q/qFoqwDs8TRv6WumwA27QX10B55podBmpOwgOwEMI+E8O3hM3L4AL4eRZn2gnpoj9zTywCtrwrYiVdQ
        jaOv77FRR/30sQP40zCS+nwaSWnsUBkDYm70Nity2AD+cCA1dqiOaWh65iQsoBwDYwZhINbjiXmHDOD3
        081G2AA16/Ws+OMFsCktaIrzM/rW8yVphwrgl8HrzTagbj13wN3rfAniMAEcwvcrDRmapArujxPwDhTA
        r+9GUg4stEQV3Bfhe3KMAHYmJTRPp9wPA66T5gP4NPUMNM9AugvC91dNB7B1IzgWbfrYhO977Qbw7WjZ
        6BmgSr3eaOOZRgPYgYTDMpg+HOE7r6kAHk/SOH+5AnBgn2a20SThe18zATyebGVkDF3QaR+D4/hYOxWw
        8IWu6Lzb5vg9V3UAuy4Q+uas6DYJ32WqDeDTeu/8Y0A/DMTbInyXqy+Ax9PVZ7YDXQoduhBug/Bdp74A
        njnLeZyGUg1Dt3Ts9XOM1qsjgMeq18EDHjAIr5LZie2KBvC0zvvq2l5gCSFcF8djl3IB/OjAuQgfuEen
        XwfHYbesAfyyJFgdVOAJS1bluEIlnuQBPB6scY3gWYOxjgAsZ+0xP9dlx5UkgMNtI5eeueyAApupxLJQ
        9aYRJYBPgRt+Ph2kJSdVubQIiEI/ktYnU/6pbArgaepnW4gKXiAuAZGG/ZrWb0KYTi7rsMOIJ5wwNZ40
        FUY/58Dcd7nQ+bUBUjCwj0bw5pHnLGgNA8hgDI5QOMw8xnOhEBO++UQP4LGSDg1A6AKFCJEN9NnZ5amA
        ATILIXxaWpt/nHPBJHiLEcDAoamGPxK8dZgN4HB28+n63KvRo4MFNMra8IngrYsKGOjHED49TksL3joJ
        YKA/nQSx4K2bAAb6ddAgFrxtEMAAIawaXyMOoTuudQveZiwO4Bdfmg8cXIsBptptlwoYYEatYRwCdwpd
        l1i1TQADLDEE3niJZgi/uccTC2ErcI9FAANsca5AU4RyeE2Be3wCGCCmMG09Y7rBUfDh8bnX4fAEMAAU
        IIABoICnAfyH776b3Q4AbKcCBoACBDAAFCCAAaAAAQwABQhgAChAAANAAQIYAAoQwABQgAAGgAIEMAAU
        IIABoAABDAAFCGAAKEAAA0ABAhgAChDAAFCAAAaAAgQwABQggAGgAAEMAAUIYAAoQAADQAECGAAKEMAA
        UIAABoACBDAAFCCAAaCApwH8h++/n90OAGz3PIC/+252OwCwnSloAChAAANAAQIYAAoQwABQgAAGgAIW
        B7DLkQAgHhUwABQggAGgAAEMAAUIYAAoQAADQHaf3v4f16+/fcsKYG8AAAAASUVORK5CYII=
</value>
  </data>
</root>